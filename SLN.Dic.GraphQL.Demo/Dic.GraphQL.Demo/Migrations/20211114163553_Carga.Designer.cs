// <auto-generated />
using System;
using Dic.GraphQL.Demo.Entities.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inicial.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20211114163553_Carga")]
    partial class Carga
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Dic.GraphQL.Demo.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("68d55110-3af6-439f-9d7c-6906c3c289d5"),
                            Description = "Cash account for our users",
                            OwnerId = new Guid("2b20bba1-67de-4105-b53a-e54b6895ea2b"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("f01c2f2d-434a-40ff-afd1-2b9c46ff23c2"),
                            Description = "Savings account for our users",
                            OwnerId = new Guid("247f57a7-9cfa-414c-aec7-058ca5972667"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("8ce53df1-f248-491a-a5db-e8d71ff7b011"),
                            Description = "Income account for our users",
                            OwnerId = new Guid("247f57a7-9cfa-414c-aec7-058ca5972667"),
                            Type = 3
                        });
                });

            modelBuilder.Entity("Dic.GraphQL.Demo.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b20bba1-67de-4105-b53a-e54b6895ea2b"),
                            Address = "John Doe's address",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("247f57a7-9cfa-414c-aec7-058ca5972667"),
                            Address = "Jane Doe's address",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("Dic.GraphQL.Demo.Entities.Account", b =>
                {
                    b.HasOne("Dic.GraphQL.Demo.Entities.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Dic.GraphQL.Demo.Entities.Owner", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
